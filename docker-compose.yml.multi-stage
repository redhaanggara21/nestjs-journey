# version: '3.7'

# services:
#   development:
#     container_name: nestjs_journey_api_dev
#     image: nestjs_journey_api_dev:1.0.0
#     build:
#       context: .
#       target: development
#       dockerfile: ./Dockerfile
#     volumes:
#       - .:/usr/src/app
#       - /usr/src/app/node_modules
#     command: npm run start:development
#     ports:
#       - ${SERVER_PORT}:${SERVER_PORT}
#       - 9229:9229
#     env_file:
#       - .env
#     networks:
#       - nest-network
#     restart: unless-stopped
#     depends_on:
#       - redis
#       - db
#   production:
#     container_name: nestjs_journey_api_prod
#     image: nestjs_journey_api_prod:1.0.0
#     build:
#       context: .
#       target: production
#       dockerfile: ./Dockerfile
#     volumes:
#       - .:/usr/src/app
#       - /usr/src/app/node_modules
#     command: npm run start:production
#     ports:
#       - ${SERVER_PORT}:${SERVER_PORT}
#       - "9229:9229"
#     env_file:
#       - .env
#     networks:
#       - nest-network
#     restart: unless-stopped
#     depends_on:
#       - redis
#       - db
#   redis:
#     container_name: redis
#     image: redis:5
#     networks:
#       - nest-network
#   db:
#     container_name: pg_container_nest:1.0.0
#     image: postgres:12
#     networks:
#       - nest-network
#     environment:
#       POSTGRES_PASSWORD: ${DB_PASSWORD}
#       POSTGRES_USER: ${DB_USERNAME}
#       POSTGRES_DB: ${POSTGRES_HOST}
#       PG_DATA: /var/lib/postgresql/data
#     ports:
#       - "5432:5432"
#     volumes:
#       - pgdata:/var/lib/postgresql/data
#   pgadmin:
#     container_name: pgadmin4_container_nest:1.0.0
#     image: dpage/pgadmin4
#     restart: always
#     environment:
#       PGADMIN_DEFAULT_EMAIL: admin@admin.com
#       PGADMIN_DEFAULT_PASSWORD: root
#     ports:
#       - "5050:80"
#     depends_on:
#       - db
#     networks:
#       - nest-network
# networks:
#   nest-network:
# volumes:
#   pgdata:
#     driver: local
#   redis:
#     driver: local