
npx knex migrate:latest --env development
npx knex migrate:latest --env development
npx knex migrate:latest --env developmentTwo
npx knex init
npx knex migrate:make [name_migrations]

#run migrate
npx knex migrate:latest

#seeder
npx knex seed:make comment
npx knex seed:run
npx knex seed:run

#fast install
npm i
npm run run:pg-docker
npm run migrate && npm run seed
npm run start
rm -rf dist && npm run build  

#setup oldest
    "migrate:local": "knex migrate:latest --env development",
    "migrate:staging": "knex migrate:latest --env staging",
    "migrate:production": "knex migrate:latest --env production",
    "db:seed": "ts-node ./node_modules/typeorm-seeding/dist/cli.js seed",
    "knex": "babel-node -r dotenv/config node_modules/.bin/knex",
    "test:knex": "DOTENV_CONFIG_PATH=.env.test npm run knex"
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",

    "migrate": "npm run knex migrate:latest",
    "migrate:make": "npm run knex migrate:make -- -x ts",
    "seed": "npm run knex seed:run",
    "seed:make": "npm run knex seed:make -- -x ts",
    rm -rf node_modules package-lock.json dist && npm install && npm run build && npm run start:production

    docker build --no-cache -t featureflag

https://www.lukmanlab.com/tutorial-docker-compose-postgresql-dengan-adminer/